<!--
Author : K.F.Storm
Email : yk000123 at sina.com
Website : http://www.kfstorm.com	
-->
<local:WindowBase
		xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
		xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
		xmlns:sys="clr-namespace:System;assembly=mscorlib"
		xmlns:tb="http://www.hardcodet.net/taskbar"
		xmlns:notify="clr-namespace:DoubanFM.NotifyIcon"
		xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:local="clr-namespace:DoubanFM"  xmlns:core="clr-namespace:DoubanFM.Core;assembly=DoubanFM.Core"  mc:Ignorable="d" x:Class="DoubanFM.DoubanFMWindow" x:Name="Window"
		Title="豆瓣电台" ResizeMode="CanMinimize" Closed="Window_Closed" WindowStartupLocation="CenterScreen" IsVisibleChanged="Window_IsVisibleChanged" AllowsTransparency="True" Loaded="Window_Loaded" Topmost="{Binding Source={StaticResource Player}, Path=Settings.TopMost}" FontFamily="{Binding Settings.MainWindowFont, Source={StaticResource Player}}" Background="#FF1960AF" Foreground="White">
	<Window.Resources>
		<Storyboard x:Key="BackgroundColorStoryboard">
			<ColorAnimation Storyboard.TargetName="Window" Storyboard.TargetProperty="(local:DoubanFMWindow.OriginalBackgroundColor)" Duration="0:0:5" EasingFunction="{StaticResource Smooth}"/>
		</Storyboard>
		<Storyboard x:Key="ShowCover1Storyboard">
			<DoubleAnimation Storyboard.TargetName="Cover1" Storyboard.TargetProperty="Opacity" Duration="0:0:1" To="1"/>
		</Storyboard>
		<Storyboard x:Key="ShowCover2Storyboard">
			<DoubleAnimation Storyboard.TargetName="Cover1" Storyboard.TargetProperty="Opacity" Duration="0:0:1" To="0"/>
		</Storyboard>
		<Storyboard x:Key="SlideCoverRightStoryboard">
			<ObjectAnimationUsingKeyFrames Storyboard.TargetName="FirstTimePanel" Storyboard.TargetProperty="Visibility">
				<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Collapsed}"/>
			</ObjectAnimationUsingKeyFrames>
			 <ObjectAnimationUsingKeyFrames Storyboard.Target="{Binding Settings, Source={StaticResource Player}}" Storyboard.TargetProperty="FirstTime">
				<DiscreteObjectKeyFrame KeyTime="0">
					<DiscreteObjectKeyFrame.Value>
						<sys:Boolean>False</sys:Boolean>
					</DiscreteObjectKeyFrame.Value>
				</DiscreteObjectKeyFrame>
			</ObjectAnimationUsingKeyFrames>
			 <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="CoverGrid">
			 	<EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="300" EasingFunction="{StaticResource Smooth}"/>
			 </DoubleAnimationUsingKeyFrames>
		</Storyboard>
		<Storyboard x:Key="SlideCoverLeftStoryboard">
			<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="CoverGrid">
				<EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="0" EasingFunction="{StaticResource Smooth}"/>
			</DoubleAnimationUsingKeyFrames>
		</Storyboard>
		<Storyboard x:Key="ChangeSongInfoStoryboard">
			<DoubleAnimationUsingKeyFrames Storyboard.TargetName="SongInfoPanel" Storyboard.TargetProperty="Opacity">
				<EasingDoubleKeyFrame Value="0" KeyTime="0:0:0.5" EasingFunction="{StaticResource Smooth}"/>
				<EasingDoubleKeyFrame Value="1" KeyTime="0:0:2" EasingFunction="{StaticResource Smooth}"/>
			</DoubleAnimationUsingKeyFrames>
			<StringAnimationUsingKeyFrames Storyboard.TargetName="SongTitle" Storyboard.TargetProperty="Text">
				<DiscreteStringKeyFrame KeyTime="0:0:0.5"/>
			</StringAnimationUsingKeyFrames>
			<StringAnimationUsingKeyFrames Storyboard.TargetName="Artist" Storyboard.TargetProperty="Text">
				<DiscreteStringKeyFrame KeyTime="0:0:0.5"/>
			</StringAnimationUsingKeyFrames>
			<StringAnimationUsingKeyFrames Storyboard.TargetName="Album" Storyboard.TargetProperty="Text">
				<DiscreteStringKeyFrame KeyTime="0:0:0.5"/>
			</StringAnimationUsingKeyFrames>
			<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="SongInfoPanel">
				<EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="50"/>
				<DiscreteDoubleKeyFrame KeyTime="0:0:0.5" Value="-20"/>
				<EasingDoubleKeyFrame KeyTime="0:0:2" Value="0">
					<EasingDoubleKeyFrame.EasingFunction>
						<CircleEase EasingMode="EaseOut"/>
					</EasingDoubleKeyFrame.EasingFunction>
				</EasingDoubleKeyFrame>
			</DoubleAnimationUsingKeyFrames>
		</Storyboard>
		<Storyboard x:Key="HideChannelList">
			<Int32Animation Duration="0" Storyboard.TargetProperty="(Panel.ZIndex)" To="0"/>
			<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity">
				<EasingDoubleKeyFrame Value="0" KeyTime="0:0:0.5" EasingFunction="{StaticResource Smooth}"/>
			</DoubleAnimationUsingKeyFrames>
			<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)">
				<EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="50"/>
			</DoubleAnimationUsingKeyFrames>
		</Storyboard>
		<Storyboard x:Key="ShowChannelList">
			<Int32Animation Duration="0" Storyboard.TargetProperty="(Panel.ZIndex)" To="1"/>
			<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity">
				<EasingDoubleKeyFrame Value="1" KeyTime="0:0:1.5" EasingFunction="{StaticResource Smooth}"/>			
			</DoubleAnimationUsingKeyFrames>
			<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)">
				<EasingDoubleKeyFrame KeyTime="0" Value="-20"/>
				<EasingDoubleKeyFrame KeyTime="0:0:1.5" Value="0">
					<EasingDoubleKeyFrame.EasingFunction>
						<CircleEase/>
					</EasingDoubleKeyFrame.EasingFunction>
				</EasingDoubleKeyFrame>
			</DoubleAnimationUsingKeyFrames>
		</Storyboard>
		<Storyboard x:Key="PersonalClickStoryboard">
			<Storyboard Storyboard.TargetName="PersonalChannels">
				<StaticResource ResourceKey="ShowChannelList"/>
			</Storyboard>
			<Storyboard Storyboard.TargetName="PublicChannels">
				<StaticResource ResourceKey="HideChannelList"/>
			</Storyboard>
			<Storyboard Storyboard.TargetName="DjCates">
				<StaticResource ResourceKey="HideChannelList"/>
			</Storyboard>
			<Storyboard Storyboard.TargetName="DjChannels">
				<StaticResource ResourceKey="HideChannelList"/>
			</Storyboard>
		</Storyboard>
		<Storyboard x:Key="PublicClickStoryboard">
			<Storyboard Storyboard.TargetName="PersonalChannels">
				<StaticResource ResourceKey="HideChannelList"/>
			</Storyboard>
			<Storyboard Storyboard.TargetName="PublicChannels">
				<StaticResource ResourceKey="ShowChannelList"/>
			</Storyboard>
			<Storyboard Storyboard.TargetName="DjCates">
				<StaticResource ResourceKey="HideChannelList"/>
			</Storyboard>
			<Storyboard Storyboard.TargetName="DjChannels">
				<StaticResource ResourceKey="HideChannelList"/>
			</Storyboard>
		</Storyboard>
		<Storyboard x:Key="DjClickStoryboard">
			<Storyboard Storyboard.TargetName="PersonalChannels">
				<StaticResource ResourceKey="HideChannelList"/>
			</Storyboard>
			<Storyboard Storyboard.TargetName="PublicChannels">
				<StaticResource ResourceKey="HideChannelList"/>
			</Storyboard>
			<Storyboard Storyboard.TargetName="DjCates">
				<StaticResource ResourceKey="ShowChannelList"/>
			</Storyboard>
			<Storyboard Storyboard.TargetName="DjChannels">
				<StaticResource ResourceKey="HideChannelList"/>
			</Storyboard>
		</Storyboard>
		<Storyboard x:Key="DjChannelClickStoryboard">
			<Storyboard Storyboard.TargetName="PersonalChannels">
				<StaticResource ResourceKey="HideChannelList"/>
			</Storyboard>
			<Storyboard Storyboard.TargetName="PublicChannels">
				<StaticResource ResourceKey="HideChannelList"/>
			</Storyboard>
			<Storyboard Storyboard.TargetName="DjCates">
				<StaticResource ResourceKey="HideChannelList"/>
			</Storyboard>
			<Storyboard Storyboard.TargetName="DjChannels">
				<StaticResource ResourceKey="ShowChannelList"/>
			</Storyboard>
		</Storyboard>
		<BitmapImage x:Key="PauseThumbImage">Images/DoubanFM_Pause.png</BitmapImage>
		<BitmapImage x:Key="PlayThumbImage">Images/DoubanFM_Play.png</BitmapImage>
		<BitmapImage x:Key="NextThumbImage">Images/DoubanFM_Next.png</BitmapImage>
		<BitmapImage x:Key="LikeThumbImage">Images/DoubanFM_Like_Like.png</BitmapImage>
		<BitmapImage x:Key="LikeThumbImage_Disabled">Images/DoubanFM_Like_Disabled.png</BitmapImage>
		<BitmapImage x:Key="UnlikeThumbImage">Images/DoubanFM_Like_Unlike.png</BitmapImage>
		<BitmapImage x:Key="NeverThumbImage">Images/DoubanFM_Never.png</BitmapImage>
		<BitmapImage x:Key="NeverThumbImage_Disabled">Images/DoubanFM_Never_Disabled.png</BitmapImage>
		<Storyboard x:Key="OnVolumeControlMouseEnter">
			<ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)" Storyboard.TargetName="BdVolumeControl">
				<EasingThicknessKeyFrame KeyTime="0:0:0.2" Value="0">
					<EasingThicknessKeyFrame.EasingFunction>
						<CircleEase/>
					</EasingThicknessKeyFrame.EasingFunction>
				</EasingThicknessKeyFrame>
			</ThicknessAnimationUsingKeyFrames>
		</Storyboard>
		<Storyboard x:Key="OnVolumeControlMouseLeave">
			<ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)" Storyboard.TargetName="BdVolumeControl">
				<EasingThicknessKeyFrame KeyTime="0:0:1" Value="0,0,-65,0">
					<EasingThicknessKeyFrame.EasingFunction>
						<CircleEase EasingMode="EaseOut"/>
					</EasingThicknessKeyFrame.EasingFunction>
				</EasingThicknessKeyFrame>
			</ThicknessAnimationUsingKeyFrames>
		</Storyboard>
		<Storyboard x:Key="VolumeFadeOut" Completed="VolumeFadeOut_Completed">
			<DoubleAnimation Storyboard.TargetProperty="VolumeFadeParameter" Storyboard.TargetName="Window" To="0" Duration="0:0:1"/>
		</Storyboard>
		<Storyboard x:Key="VolumeFadeIn">
			<DoubleAnimation Storyboard.TargetProperty="VolumeFadeParameter" Storyboard.TargetName="Window" To="1" Duration="0:0:1"/>
		</Storyboard>
		<Storyboard x:Key="VolumeDirectIn">
			<DoubleAnimation Storyboard.TargetProperty="VolumeFadeParameter" Storyboard.TargetName="Window" To="1" Duration="0"/>
		</Storyboard>
	</Window.Resources>
	<Window.Triggers>
		<EventTrigger RoutedEvent="Mouse.MouseEnter" SourceName="BdVolumeControl">
			<BeginStoryboard x:Name="OnVolumeControlMouseEnter_BeginStoryboard" Storyboard="{StaticResource OnVolumeControlMouseEnter}"/>
		</EventTrigger>
		<EventTrigger RoutedEvent="Mouse.MouseLeave" SourceName="BdVolumeControl">
			<BeginStoryboard x:Name="OnVolumeControlMouseLeave_BeginStoryboard" Storyboard="{StaticResource OnVolumeControlMouseLeave}"/>
		</EventTrigger>
	</Window.Triggers>
	<Window.TaskbarItemInfo>
		<TaskbarItemInfo>
			<TaskbarItemInfo.ThumbButtonInfos>
				<ThumbButtonInfo x:Name="LikeThumb" ImageSource="{StaticResource UnlikeThumbImage}" Click="LikeThumb_Click" Description="喜欢" />
				<ThumbButtonInfo x:Name="NeverThumb" ImageSource="{StaticResource NeverThumbImage_Disabled}" Click="NeverThumb_Click" Description="不再播放" IsEnabled="False"/>
				<ThumbButtonInfo x:Name="PauseThumb" Click="PauseThumb_Click" ImageSource="{StaticResource PauseThumbImage}" Description="暂停" />
				<ThumbButtonInfo x:Name="NextThumb" Click="NextThumb_Click" ImageSource="{StaticResource NextThumbImage}" Description="下一首" />
			</TaskbarItemInfo.ThumbButtonInfos>
		</TaskbarItemInfo>
	</Window.TaskbarItemInfo>
	<Grid>
		<Grid.LayoutTransform>
			<TransformGroup>
				<ScaleTransform ScaleX="{Binding Settings.ScaleTransform, Source={StaticResource Player}}" ScaleY="{Binding ScaleX, RelativeSource={RelativeSource Self}}"/>
			</TransformGroup>
		</Grid.LayoutTransform>
		<tb:TaskbarIcon x:Name="NotifyIcon" IconSource="icon.ico" PopupActivation="RightClick"  ToolTipText="{Binding CurrentSong, Source={StaticResource Player}, TargetNullValue=豆瓣电台}" TrayLeftMouseUp="NotifyIcon_TrayLeftMouseUp">
			<tb:TaskbarIcon.TrayToolTip>
				<notify:BalloonSongInfo/>
			</tb:TaskbarIcon.TrayToolTip>
			<tb:TaskbarIcon.TrayPopup>
				<notify:PopupControlPanel/>
			</tb:TaskbarIcon.TrayPopup>
		</tb:TaskbarIcon>
		<Grid x:Name="grid" Height="300">
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="300" />
				<ColumnDefinition Width="300"/>
			</Grid.ColumnDefinitions>
			<Grid x:Name="LeftPanel" Background="Transparent" Panel.ZIndex="1" ClipToBounds="True">
				<TabControl x:Name="ControlPanel" Style="{DynamicResource ControlPanelStyle}" ClipToBounds="True" FocusVisualStyle="{x:Null}">
					<TabItem Header="{DynamicResource TabItemChannels}" IsEnabled="{Binding Source={StaticResource Player}, Path=IsInitialized}">
						<Grid x:Name="ChannelsGrid">
							<Grid.RowDefinitions>
								<RowDefinition Height="40"/>
								<RowDefinition/>
							</Grid.RowDefinitions>
							<Grid Background="#4E000000">
								<Grid.ColumnDefinitions>
									<ColumnDefinition/>
									<ColumnDefinition/>
									<ColumnDefinition/>
								</Grid.ColumnDefinitions>
								<RadioButton x:Name="ButtonPersonal" Margin="5" Content="我的电台" IsEnabled="{Binding Source={StaticResource Player}, Path=UserAssistant.IsLoggedOn}" Style="{DynamicResource ChannelCategoryStyle}">
									<RadioButton.Triggers>
										<EventTrigger RoutedEvent="RadioButton.Checked">
											<BeginStoryboard Storyboard="{StaticResource PersonalClickStoryboard}"/>
										</EventTrigger>
									</RadioButton.Triggers>
								</RadioButton>
								<RadioButton x:Name="ButtonPublic" Grid.Column="1" Margin="5" IsChecked="True" Content="公共兆赫" Style="{DynamicResource ChannelCategoryStyle}">
									<RadioButton.Triggers>
										<EventTrigger RoutedEvent="RadioButton.Checked">
											<BeginStoryboard Storyboard="{StaticResource PublicClickStoryboard}"/>
										</EventTrigger>
									</RadioButton.Triggers>
								</RadioButton>
								<RadioButton x:Name="ButtonDjCates" Grid.Column="2" Margin="5" Content="DJ兆赫" Click="ButtonDjCates_Click" Style="{DynamicResource ChannelCategoryStyle}">
									<RadioButton.Triggers>
										<EventTrigger RoutedEvent="RadioButton.Checked">
											<BeginStoryboard Storyboard="{StaticResource DjClickStoryboard}"/>																	</EventTrigger>
									</RadioButton.Triggers>
								</RadioButton>
							</Grid>
							<Grid x:Name="ChannelsContentGrid" Grid.Row="1" d:IsHidden="True">
								<ListBox x:Name="PersonalChannels" SelectionChanged="PersonalChannels_SelectionChanged" Style="{DynamicResource ChannelsStyle}" Opacity="0">
									<ListBox.RenderTransform>
										<TransformGroup>
											<ScaleTransform/>
											<SkewTransform/>
											<RotateTransform/>
											<TranslateTransform/>
										</TransformGroup>
									</ListBox.RenderTransform>
								</ListBox>
								<ListBox x:Name="PublicChannels" SelectionChanged="PublicChannels_SelectionChanged" Style="{DynamicResource ChannelsStyle}" Panel.ZIndex="1">
									<ListBox.RenderTransform>
										<TransformGroup>
											<ScaleTransform/>
											<SkewTransform/>
											<RotateTransform/>
											<TranslateTransform/>
										</TransformGroup>
									</ListBox.RenderTransform>
								</ListBox>
								<ListBox x:Name="DjCates" Style="{DynamicResource ChannelsStyle}" SelectionChanged="DjCates_SelectionChanged" Opacity="0">
									<ListBox.RenderTransform>
										<TransformGroup>
											<ScaleTransform/>
											<SkewTransform/>
											<RotateTransform/>
											<TranslateTransform/>
										</TransformGroup>
									</ListBox.RenderTransform>
									<ListBox.ItemTemplate>
										<DataTemplate>
											<TextBlock Text="{Binding Name}" FontSize="20" TextWrapping="Wrap" Padding="10"/>
										</DataTemplate>
									</ListBox.ItemTemplate>
								</ListBox>
								<ListBox x:Name="DjChannels" Style="{DynamicResource ChannelsStyle}" SelectionChanged="DjChannels_SelectionChanged" Opacity="0">
									<ListBox.RenderTransform>
										<TransformGroup>
											<ScaleTransform/>
											<SkewTransform/>
											<RotateTransform/>
											<TranslateTransform/>
										</TransformGroup>
									</ListBox.RenderTransform>
								</ListBox>
							</Grid>
						</Grid>
					</TabItem>
					<TabItem Header="{DynamicResource TabItemSearch}" IsEnabled="{Binding Source={StaticResource Player}, Path=IsInitialized}">
						<Grid>
							<Grid.RowDefinitions>
								<RowDefinition Height="Auto"/>
								<RowDefinition/>
								<RowDefinition Height="40"/>
							</Grid.RowDefinitions>
							<Grid Margin="10" Height="30">
								<Grid.ColumnDefinitions>
									<ColumnDefinition/>
									<ColumnDefinition Width="Auto"/>
								</Grid.ColumnDefinitions>
								<TextBox x:Name="SearchText" Height="20" IsEnabled="{Binding Source={StaticResource Player}, Path=MusicSearch.IsSearchFinished}"/>
								<Button x:Name="Search" Grid.Column="1" Margin="10,0,0,0" Click="Search_Click" IsDefault="True" IsEnabled="{Binding Source={StaticResource Player}, Path=MusicSearch.IsSearchFinished}" Style="{DynamicResource SearchStyle}"/>
							</Grid>
							<ListBox x:Name="SearchResultList" Grid.Row="1" Style="{DynamicResource SearchResultListStyle}" SelectionChanged="SearchResultList_SelectionChanged" ItemsSource="{Binding Source={StaticResource Player}, Path=MusicSearch.SearchResult}" />
							<Label Grid.Row="1" Visibility="{Binding Converter={StaticResource BoolReverseToVisibilityConverter}, Source={StaticResource Player}, Path=MusicSearch.IsSearchFinished}" HorizontalAlignment="Center" VerticalAlignment="Center">正在搜索...</Label>
							<StackPanel Grid.Row="1" Visibility="{Binding Path=MusicSearch.ShowNoResultHint, Source={StaticResource Player}, Converter={StaticResource BooleanToVisibilityConverter}}" Height="Auto" VerticalAlignment="Center">
								<Label HorizontalAlignment="Center">搜索结果与music.douban.com保持一致</Label>
								<StackPanel Visibility="{Binding Converter={StaticResource BoolToVisibilityConverter}, Source={StaticResource Player}, Path=Settings.IsSearchFilterEnabled}">
									<Label HorizontalAlignment="Center">您开启了自动剔除无法收听的项目</Label>
									<Label HorizontalAlignment="Center">可能下一页就会有结果哦</Label>
								</StackPanel>
							</StackPanel>
							<StackPanel Grid.Row="2" HorizontalAlignment="Center" Orientation="Horizontal" Height="30">
								<Button x:Name="PreviousPage" Click="PreviousPage_Click" IsEnabled="{Binding Path=MusicSearch.IsPreviousPageEnabled, Source={StaticResource Player}}" Style="{DynamicResource PreviousPageStyle}"/>
								<Border Width="20"/>
								<Button x:Name="NextPage" Click="NextPage_Click" IsEnabled="{Binding Path=MusicSearch.IsNextPageEnabled, Source={StaticResource Player}}" Style="{DynamicResource NextPageStyle}"/>
							</StackPanel>
						</Grid>
					</TabItem>
					<TabItem x:Name="Account" Header="{DynamicResource TabItemAccount}" IsEnabled="{Binding Source={StaticResource Player}, Path=IsInitialized}">
						<Grid>
							<Grid x:Name="LogOnPanel" Visibility="{Binding Converter={StaticResource BooleanToVisibilityConverter}, Path=UserAssistant.IsLoggedOff, Source={StaticResource Player}}">
								<Grid Margin="20">
									<Grid.RowDefinitions>
										<RowDefinition Height="Auto"/>
										<RowDefinition Height="Auto"/>
										<RowDefinition/>
									</Grid.RowDefinitions>
									<Grid>
										<Grid.RowDefinitions>
											<RowDefinition/> 					
											<RowDefinition/> 					
											<RowDefinition Height="Auto"/> 					
											<RowDefinition Height="Auto"/> 					
										</Grid.RowDefinitions> 
										<Grid.ColumnDefinitions>
											<ColumnDefinition Width="70"/>
											<ColumnDefinition/>
										</Grid.ColumnDefinitions>
										<TextBlock VerticalAlignment="Center" Text="邮箱/用户名"/>
										<TextBlock VerticalAlignment="Center" Grid.Row="1" Text="密码"/>
										<TextBox x:Name="TbUsername" Grid.Column="1" Margin="0,4" Text="{Binding Path=Settings.User.Username, Mode=TwoWay, Source={StaticResource Player}}"/>
										<PasswordBox x:Name="PbPassword" Grid.Row="1" Grid.Column="1" Margin="0,4" PasswordChanged="PbPassword_PasswordChanged" />
										<!--<Grid x:Name="CaptchaGrid" Grid.Row="2" Grid.ColumnSpan="2" Margin="0,10" Visibility="{Binding Converter={StaticResource BooleanToVisibilityConverter}, Path=UserAssistant.HasCaptcha, Source={StaticResource Player}}">
											<Grid.ColumnDefinitions>
												<ColumnDefinition Width="Auto"/>
												<ColumnDefinition/>
											</Grid.ColumnDefinitions>
											<Grid.RowDefinitions>
												<RowDefinition Height="Auto"/>
												<RowDefinition/>
											</Grid.RowDefinitions>
											<Button x:Name="ButtonRefreshCaptcha" Grid.ColumnSpan="2" Click="ButtonRefreshCaptcha_Click" Padding="0" MinHeight="40" MaxHeight="40" BorderThickness="0">
												<Image x:Name="Captcha" Stretch="Fill"/>
											</Button>
											<Label Grid.Row="1" HorizontalAlignment="Right" VerticalAlignment="Center" Content="验证码"/>
											<TextBox x:Name="CaptchaText" Grid.Row="1" Grid.Column="1" Margin="4"/>
										</Grid>-->
									</Grid>
									<StackPanel Grid.Row="1" Margin="0,10">
										<TextBlock x:Name="LogOnFailedHint" HorizontalAlignment="Center" VerticalAlignment="Center" Visibility="{Binding Converter={StaticResource BooleanToVisibilityConverter}, Path=UserAssistant.ShowLogOnFailedHint, Source={StaticResource Player}}" Text="{Binding UserAssistant.LogOnFailedMessage, Source={StaticResource Player}}"/>
										<Grid Margin="0,10">
											<Grid.ColumnDefinitions>
												<ColumnDefinition/>
												<ColumnDefinition/>
											</Grid.ColumnDefinitions>
											<Button x:Name="ButtonLogOn" Grid.Column="1" Click="ButtonLogOn_Click" IsDefault="True" Content="登录" HorizontalAlignment="Center" Width="100" Height="40" FontSize="16"/>
											<Button x:Name="ButtonSignUp" Content="注册" HorizontalAlignment="Center" VerticalAlignment="Bottom" Width="75" Height="30" Click="ButtonSignUp_Click"/>
										</Grid>
									</StackPanel>
									<Grid Grid.Row="2" VerticalAlignment="Bottom" Margin="0,20">
										<Grid.ColumnDefinitions>
											<ColumnDefinition/>
											<ColumnDefinition/>
										</Grid.ColumnDefinitions>
										<CheckBox x:Name="CheckBoxRememberPassword" VerticalAlignment="Center" HorizontalAlignment="Center" Content="记住密码" IsChecked="{Binding Path=Settings.RememberPassword, Mode=TwoWay, Source={StaticResource Player}}" />
										<CheckBox Grid.Column="1" x:Name="CheckBoxAutoLogOnNextTime" VerticalAlignment="Center" HorizontalAlignment="Center" Content="下次自动登录" IsChecked="{Binding Path=Settings.AutoLogOnNextTime, Mode=TwoWay, Source={StaticResource Player}}" />
									</Grid>
								</Grid>
							</Grid>
							<Grid x:Name="LogOffPanel" Visibility="{Binding Converter={StaticResource BooleanToVisibilityConverter}, Path=UserAssistant.IsLoggedOn, Source={StaticResource Player}}">
								<Grid.RowDefinitions>
									<RowDefinition/>
									<RowDefinition Height="Auto"/>
									<RowDefinition/>
									<RowDefinition/>
								</Grid.RowDefinitions>
								<Label Margin="10" HorizontalAlignment="Center" VerticalAlignment="Center" Content="{Binding Settings.User.Nickname, Source={StaticResource Player}}" FontSize="24"/>
								<StackPanel Grid.Row="1" VerticalAlignment="Center" TextElement.FontSize="14">
									<TextBlock HorizontalAlignment="Center">
										<Hyperlink x:Name="HlPlayed" Click="HlPlayed_Click" Foreground="White">
											<Run Text="{Binding Settings.User.Played, Source={StaticResource Player}, StringFormat=累积收听{0}首}"/>
										</Hyperlink>
									</TextBlock>
									<TextBlock HorizontalAlignment="Center">
										<Hyperlink x:Name="HlLiked" Click="HlLiked_Click" Foreground="White">
											<Run Text="{Binding Settings.User.Liked, Source={StaticResource Player}, StringFormat=加红心{0}首}"/>
										</Hyperlink>
									</TextBlock>
									<TextBlock HorizontalAlignment="Center">
										<Hyperlink x:Name="HlBanned" Click="HlBanned_Click" Foreground="White">
											<Run Text="{Binding Settings.User.Banned, Source={StaticResource Player}, StringFormat={}{0}首不再播放}"/>
										</Hyperlink>
									</TextBlock>
								</StackPanel>
								<Label Grid.Row="2" Margin="10" HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="30" Content="已登录"/>
								<Button Grid.Row="3" x:Name="ButtonLogOff" HorizontalAlignment="Center" VerticalAlignment="Center" Padding="20,5" Margin="10" Click="ButtonLogOff_Click" Content="注销" FontSize="16"/>
							</Grid>
							<Grid x:Name="LoggingOnPanel" Visibility="{Binding Converter={StaticResource BooleanToVisibilityConverter}, Path=UserAssistant.IsLoggingOn, Source={StaticResource Player}}">
								<Label FontSize="40" HorizontalAlignment="Center" VerticalAlignment="Center" Content="正在登录"/>
							</Grid>
							<Grid x:Name="LoggingOffPanel" Visibility="{Binding Converter={StaticResource BooleanToVisibilityConverter}, Path=UserAssistant.IsLoggingOff, Source={StaticResource Player}}">
								<Label FontSize="40" HorizontalAlignment="Center" VerticalAlignment="Center" Content="正在注销"/>
							</Grid>
						</Grid>
					</TabItem>
					<TabItem Header="{DynamicResource TabItemSettings}">
						<Grid Margin="20">
							<Grid.RowDefinitions>
								<RowDefinition/>
								<RowDefinition Height="Auto"/>
							</Grid.RowDefinitions>
							<Grid Width="100" VerticalAlignment="Center" Margin="10">
								<Grid.RowDefinitions>
									<RowDefinition/>
									<RowDefinition Height="10"/>
									<RowDefinition/>
									<RowDefinition Height="10"/>
									<RowDefinition/>
									<RowDefinition Height="10"/>
									<RowDefinition/>
									<RowDefinition Height="10"/>
									<RowDefinition/>
								</Grid.RowDefinitions>
								<Button x:Name="ButtonGeneralSetting" Content="常规设置" Click="ButtonGeneralSetting_Click"/>
								<Button Grid.Row="2" x:Name="ButtonUISetting" Content="界面设置" Click="ButtonUISetting_Click"/>
								<Button Grid.Row="4" x:Name="ButtonLyricsSetting" Content="歌词设置" Click="LyricsSetting_Click" />
								<Button Grid.Row="6" x:Name="ButtonHotKeySettings" Click="ButtonHotKeySettings_Click" Content="热键设置"/>
								<Button Grid.Row="8" x:Name="ButtonShareSetting" Content="分享设置" Click="ButtonShareSetting_Click"/>
							</Grid>
							<Button x:Name="BtnResetSettings" Grid.Row="1" Width="100" Content="重置所有设置" Click="BtnResetSettings_Click"/>
						</Grid>			
					</TabItem>
					<TabItem Header="{DynamicResource TabItemInfo}">
						<Border Padding="20">
							<Grid>
								<Grid.RowDefinitions>
									<RowDefinition Height="Auto"/>
									<RowDefinition Height="Auto"/>
									<RowDefinition Height="Auto"/>
									<RowDefinition/>
									<RowDefinition/>
									<RowDefinition Height="Auto"/>
								</Grid.RowDefinitions>
								<StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
									<Button x:Name="GoToHomePage" Height="40" Style="{DynamicResource IconStyle}" Margin="0,0,10,0" Click="GoToHomePage_Click"/>
									<Label HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="26.667">豆瓣电台</Label>
									<Button x:Name="BtnHelp" Height="40" Click="BtnHelp_Click" Style="{DynamicResource HelpStyle}"/>
								</StackPanel>
								<TextBlock Grid.Row="1" HorizontalAlignment="Center">第三方客户端</TextBlock>
								<Label Grid.Row="2" HorizontalAlignment="Center" Margin="0,0,0,10">1.7.1</Label>
								<Button x:Name="CheckUpdate" Grid.Row="3" Click="CheckUpdate_Click" Style="{DynamicResource CheckUpdateStyle}"/>
								<Grid Grid.Row="4" Height="40">
									<Grid.ColumnDefinitions>
										<ColumnDefinition/>
										<ColumnDefinition/>
									</Grid.ColumnDefinitions>
									<Button x:Name="Feedback" Click="Feedback_Click" Style="{DynamicResource FeedbackStyle}"/>
									<Button x:Name="VisitOfficialWebsite" Grid.Column="1" Click="VisitOfficialWebsite_Click" Style="{DynamicResource DoubanFMOfficialWebsiteStyle}"/>
								</Grid>
								<Label Grid.Row="5" HorizontalAlignment="Center" VerticalAlignment="Center">Copyright © 2011-2012 K.F.Storm</Label>
							</Grid>
						</Border>
					</TabItem>
				</TabControl>
			</Grid>
			<Grid x:Name="RightPanel" Grid.Column="1" Background="Transparent" ClipToBounds="True">
				<Grid Margin="15,10,10,10">
					<Grid.RowDefinitions>
						<RowDefinition Height="Auto"/>
						<RowDefinition Height="3*"/>
						<RowDefinition Height="Auto"/>
						<RowDefinition Height="Auto"/>
						<RowDefinition Height="Auto"/>
						<RowDefinition/>
					</Grid.RowDefinitions>
					<Grid Height="20">
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="2*"/>
							<ColumnDefinition/>
						</Grid.ColumnDefinitions>
						<TextBlock x:Name="ChannelTextBlock" TextTrimming="CharacterEllipsis" Foreground="White" FontSize="14.667" FontStretch="Normal" Text="{Binding Source={StaticResource Player}, Path=CurrentChannel}" />
						<StackPanel Grid.Column="1" x:Name="WindowStateControls" Orientation="Horizontal" HorizontalAlignment="Right">
							<Button x:Name="ButtonMinimize" Click="ButtonMinimize_Click" Style="{DynamicResource MinimizeStyle}"/>
							<Border Width="10"/>
							<Button x:Name="ButtonToNotifyIcon" Click="ButtonToNotifyIcon_Click" Style="{DynamicResource ToNotifyIconStyle}"/>
							<Border Width="10"/>
							<Button x:Name="ButtonExit" Click="ButtonExit_Click" Style="{DynamicResource ExitStyle}"/>
						</StackPanel>
					</Grid>
					<Grid Grid.Row="1" x:Name="SongInfoPanel" TextOptions.TextFormattingMode="Ideal" VerticalAlignment="Top" Height="120" RenderTransformOrigin="0.5,0.5">
						<Grid.RenderTransform>
							<TransformGroup>
								<ScaleTransform/>
								<SkewTransform/>
								<RotateTransform/>
								<TranslateTransform/>
							</TransformGroup>
						</Grid.RenderTransform>
						<Grid.RowDefinitions>
							<RowDefinition Height="50"/>
							<RowDefinition/>
							<RowDefinition/>
						</Grid.RowDefinitions>
						<Viewbox Margin="0,1" HorizontalAlignment="Left" StretchDirection="DownOnly">
							<TextBlock x:Name="SongTitle" FontSize="50" VerticalAlignment="Center" Text="豆瓣电台" Foreground="White"/>
						</Viewbox>
						<Viewbox Margin="0,1" Grid.Row="1" HorizontalAlignment="Left" StretchDirection="DownOnly">
							<TextBlock x:Name="Artist" FontSize="20" VerticalAlignment="Center" Foreground="White"/>
						</Viewbox>
						<Viewbox Margin="0,1" Grid.Row="2" HorizontalAlignment="Left" StretchDirection="DownOnly">
							<TextBlock x:Name="Album" VerticalAlignment="Center" FontSize="20" Foreground="White" />
						</Viewbox>
					</Grid>
					<Grid Grid.Row="2" Margin="0,5" HorizontalAlignment="Right" Height="24" ClipToBounds="True">
						<Grid.ColumnDefinitions>
							<ColumnDefinition/>
							<ColumnDefinition Width="Auto"/>
							<ColumnDefinition Width="Auto"/>
						</Grid.ColumnDefinitions>
						<Grid x:Name="SharePanel">
							<Grid.ColumnDefinitions>
								<ColumnDefinition/>
								<ColumnDefinition Width="Auto"/>
							</Grid.ColumnDefinitions>
							<Grid.Triggers>
								<EventTrigger RoutedEvent="UIElement.MouseEnter">
									<BeginStoryboard>
										<Storyboard>
											<DoubleAnimation Storyboard.TargetName="Shares" Storyboard.TargetProperty="Opacity" To="1" EasingFunction="{StaticResource Smooth}" Duration="0:0:0.5"/>
											<DoubleAnimationUsingKeyFrames Storyboard.TargetName="Shares" Storyboard.TargetProperty="Width">
												<DiscreteDoubleKeyFrame KeyTime="0" Value="{x:Static sys:Double.NaN}"/>
											</DoubleAnimationUsingKeyFrames>
										</Storyboard>
									</BeginStoryboard>
								</EventTrigger>
								<EventTrigger RoutedEvent="UIElement.MouseLeave">
									<BeginStoryboard>
										<Storyboard>
											<DoubleAnimation Storyboard.TargetName="Shares" Storyboard.TargetProperty="Opacity" To="0" EasingFunction="{StaticResource Smooth}" Duration="0:0:1"/>
											<DoubleAnimationUsingKeyFrames Storyboard.TargetName="Shares" Storyboard.TargetProperty="Width">
												<DiscreteDoubleKeyFrame KeyTime="0:0:1" Value="0"/>
											</DoubleAnimationUsingKeyFrames>
										</Storyboard>
									</BeginStoryboard>
								</EventTrigger>
							</Grid.Triggers>
							<Viewbox StretchDirection="DownOnly" HorizontalAlignment="Right">
								<StackPanel x:Name="Shares" Height="24" Width="0" Opacity="0" Orientation="Horizontal" ButtonBase.Click="ShareButton_Click">
									<Button Style="{DynamicResource ShareDoubanStyle}" Tag="{x:Static core:Share+Sites.Douban}"/>
									<Button Style="{DynamicResource ShareWeiboStyle}" Tag="{x:Static core:Share+Sites.Weibo}"/>
									<Button Style="{DynamicResource ShareMsnStyle}" Tag="{x:Static core:Share+Sites.Msn}"/>
									<Button Style="{DynamicResource ShareKaixinStyle}" Tag="{x:Static core:Share+Sites.Kaixin}"/>
									<Button Style="{DynamicResource ShareRenenStyle}" Tag="{x:Static core:Share+Sites.Renren}"/>
									<Button Style="{DynamicResource ShareTencentWeiboStyle}" Tag="{x:Static core:Share+Sites.TencentWeibo}"/>
									<Button Style="{DynamicResource ShareFanfouStyle}" Tag="{x:Static core:Share+Sites.Fanfou}"/>
									<Button Style="{DynamicResource ShareFacebookStyle}" Tag="{x:Static core:Share+Sites.Facebook}"/>
									<Button Style="{DynamicResource ShareTwitterStyle}" Tag="{x:Static core:Share+Sites.Twitter}"/>
								</StackPanel>
							</Viewbox>
							<Button x:Name="BtnCopyUrl" Grid.Column="1" Style="{StaticResource ShareStyle}" ToolTip="分享（点击直接复制地址）" Click="BtnCopyUrl_Click" Visibility="{Binding ShareSetting.EnableOneKeyShare, ElementName=Window, Converter={StaticResource BoolReverseToVisibilityConverter}, ConverterParameter={x:Static Visibility.Collapsed}}"/>
							<Button x:Name="BtnOneKeyShare" Grid.Column="1" Style="{StaticResource ShareStyle}" ToolTip="一键分享" Click="BtnOneKeyShare_Click" Visibility="{Binding ShareSetting.EnableOneKeyShare, ElementName=Window, Converter={StaticResource BoolToVisibilityConverter}, ConverterParameter={x:Static Visibility.Collapsed}}"/>
						</Grid>
						<CheckBox x:Name="CheckBoxShowLyrics" Grid.Column="1" IsChecked="{Binding Settings.ShowLyrics, Source={StaticResource Player}}" Checked="CheckBoxShowLyrics_Checked" Unchecked="CheckBoxShowLyrics_Unchecked" Style="{DynamicResource ShowLyricsStyle}"/>
						<Border x:Name="BdVolumeControl" Grid.Column="2" Background="Transparent" Margin="0,0,-65,0">
							<Viewbox StretchDirection="DownOnly">
								<local:VolumeControl x:Name="VolumeControl" IsMuted="{Binding Settings.IsMuted, Mode=TwoWay, Source={StaticResource Player}}" Volume="{Binding Settings.Volume, Mode=TwoWay, Source={StaticResource Player}}" Width="150"/>
							</Viewbox>
						</Border>
					</Grid>
					<Grid Grid.Row="3" VerticalAlignment="Bottom" Margin="0,2">
						<Grid.ColumnDefinitions>
							<ColumnDefinition/>
							<ColumnDefinition/>
						</Grid.ColumnDefinitions>
						<TextBlock x:Name="CurrentTime" FontSize="18" Foreground="White" Text="00:00"/>
						<TextBlock Grid.Column="1" x:Name="TotalTime" FontSize="18" HorizontalAlignment="Right" Foreground="White" Text="00:00"/>
					</Grid>
					<Slider x:Name="Slider" Grid.Row="4" Margin="0,5" Style="{DynamicResource SliderStyleForProgress}" Background="#7F000000" Foreground="{Binding Background, Converter={StaticResource WindowBackgroundToSliderForegroundConverter}, ElementName=Window}"/>
					<Grid Grid.Row="5" HorizontalAlignment="Center" Height="50" VerticalAlignment="Bottom">
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="38" />
							<ColumnDefinition Width="20"/>
							<ColumnDefinition Width="38" />
							<ColumnDefinition Width="20"/>
							<ColumnDefinition Width="32" />
							<ColumnDefinition Width="20"/>
							<ColumnDefinition Width="38"/>
						</Grid.ColumnDefinitions>
						<CheckBox Grid.Column="0" x:Name="CheckBoxLike" Style="{DynamicResource LikeStyle}" IsChecked="{Binding Path=IsLiked, Source={StaticResource Player}}" IsEnabled="{Binding Source={StaticResource Player}, Path=IsLikedEnabled}" />
						<Button Grid.Column="2" x:Name="ButtonNever" Style="{DynamicResource NeverStyle}" Click="ButtonNever_Click" IsEnabled="{Binding Source={StaticResource Player}, Path=IsNeverEnabled}" />
						<CheckBox Grid.Column="4" x:Name="CheckBoxPause" Style="{DynamicResource PauseStyle}" IsChecked="{Binding Path=IsPlaying, Source={StaticResource Player}, Converter={StaticResource BoolReverseConverter}}" />
						<Button Grid.Column="6" x:Name="ButtonNext" Click="ButtonNext_Click" Style="{DynamicResource NextStyle}"/>
					</Grid>
				</Grid>
			</Grid>
		</Grid>
		<Grid x:Name="CoverGrid" MouseLeftButtonDown="CoverGrid_MouseLeftButtonDown" Width="{Binding ActualWidth, ElementName=LeftPanel}" Height="{Binding ActualHeight, ElementName=LeftPanel}" HorizontalAlignment="Left" d:LayoutOverrides="HorizontalAlignment, GridBox" MouseMove="CoverGrid_MouseMove" MouseLeave="CoverGrid_MouseLeave" d:IsHidden="True" RenderTransformOrigin="0.5,0.5">
			<Grid.RenderTransform>
				<TransformGroup>
					<ScaleTransform/>
					<SkewTransform/>
					<RotateTransform/>
					<TranslateTransform/>
				</TransformGroup>
			</Grid.RenderTransform>
			<Grid x:Name="Covers">
				<Image x:Name="Cover2" Stretch="UniformToFill"/>
				<Image x:Name="Cover1" Stretch="UniformToFill" Source="/DoubanFM;component/Images/DoubanFM_NoCover.png" />
			</Grid>
			<Grid x:Name="LyricsPanel" Height="70" VerticalAlignment="Bottom" Visibility="Hidden">
				<Border Background="{Binding Background, ElementName=Window}">
					<Border.OpacityMask>
						<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
							<GradientStop Offset="0"/>
							<GradientStop Color="#CC38FFA8" Offset="0.815"/>
							<GradientStop Color="#9047FFAE" Offset="0.422"/>
						</LinearGradientBrush>
					</Border.OpacityMask>
				</Border>
				<TextBlock x:Name="CurrentLyrics" Foreground="White" Margin="7" HorizontalAlignment="Center" VerticalAlignment="Bottom" TextWrapping="Wrap" TextTrimming="WordEllipsis"/>
			</Grid>
			<Grid x:Name="FirstTimePanel" Background="#7F000000">
				<TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="24" Foreground="White" TextAlignment="Center">
					将鼠标移动到封面上<LineBreak/>
					有惊喜哦！
				</TextBlock>
			</Grid>
		</Grid>
	</Grid>
</local:WindowBase>
