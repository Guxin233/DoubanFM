<ResourceDictionary
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:DoubanFM="clr-namespace:DoubanFM">
	<!-- 应该在此定义资源字典条目。-->
	<DoubanFM:SliderThumbWidthConverter x:Key="converter1"/>
	<LinearGradientBrush x:Key="MetroColor1" StartPoint="0,1" EndPoint="1,0">
		<GradientStop Color="#FFE93613" Offset="0"/>
		<GradientStop Color="#FFFF593A" Offset="1"/>
	</LinearGradientBrush>
	<LinearGradientBrush x:Key="MetroColor2" StartPoint="0,1" EndPoint="1,0">
		<GradientStop Color="#FF9B1283" Offset="0"/>
		<GradientStop Color="#FFDC2FBA" Offset="1"/>
	</LinearGradientBrush>
    <LinearGradientBrush x:Key="MetroColor3" StartPoint="0,1" EndPoint="1,0">
		<GradientStop Color="#FFF18312" Offset="0"/>
		<GradientStop Color="#FFFFBD34" Offset="1"/>
	</LinearGradientBrush>
    <LinearGradientBrush x:Key="MetroColor4" StartPoint="0,1" EndPoint="1,0">
		<GradientStop Color="#FF26ADC6" Offset="0"/>
		<GradientStop Color="#FF4ED5DE" Offset="1"/>
	</LinearGradientBrush>
    <LinearGradientBrush x:Key="MetroColor5" StartPoint="0,1" EndPoint="1,0">
		<GradientStop Color="#FF98BC3A" Offset="0"/>
		<GradientStop Color="#FFBBDA49" Offset="1"/>
	</LinearGradientBrush>
    <LinearGradientBrush x:Key="MetroColor6" StartPoint="0,1" EndPoint="1,0">
		<GradientStop Color="#FF1B56A7" Offset="0"/>
		<GradientStop Color="#FF207ED0" Offset="1"/>
	</LinearGradientBrush>
    <LinearGradientBrush x:Key="MetroColor7" StartPoint="0,1" EndPoint="1,0">
		<GradientStop Color="#FFD2CA00" Offset="0"/>
		<GradientStop Color="#FFD5E95F" Offset="1"/>
	</LinearGradientBrush>
	<LinearGradientBrush x:Key="MetroColor8" StartPoint="0,1" EndPoint="1,0">
		<GradientStop Color="#FF258122" Offset="0"/>
		<GradientStop Color="#FF5FC44A" Offset="1"/>
	</LinearGradientBrush>
	<LinearGradientBrush x:Key="MetroColor9" StartPoint="0,1" EndPoint="1,0">
		<GradientStop Color="#FF4C25BC" Offset="0"/>
		<GradientStop Color="#FFA161C6" Offset="1"/>
	</LinearGradientBrush>
	<LinearGradientBrush x:Key="MetroColor10" StartPoint="0,1" EndPoint="1,0">
		<GradientStop Color="#FF2EC67D" Offset="0"/>
		<GradientStop Color="#FF69E49D" Offset="1"/>
	</LinearGradientBrush>
	<LinearGradientBrush x:Key="MetroColor11" StartPoint="0,1" EndPoint="1,0">
		<GradientStop Color="#FFFF6900" Offset="0"/>
		<GradientStop Color="#FFFF795B" Offset="1"/>
	</LinearGradientBrush>
	<LinearGradientBrush x:Key="MetroColor12" StartPoint="0,1" EndPoint="1,0">
		<GradientStop Color="#FF709906" Offset="0"/>
		<GradientStop Color="#FF50C232" Offset="1"/>
	</LinearGradientBrush>

	<AlternationConverter x:Key="AlternationConverter">
    	<StaticResource ResourceKey="MetroColor1"/>
    	<StaticResource ResourceKey="MetroColor2"/>
    	<StaticResource ResourceKey="MetroColor3"/>
    	<StaticResource ResourceKey="MetroColor4"/>
    	<StaticResource ResourceKey="MetroColor5"/>
    	<StaticResource ResourceKey="MetroColor6"/>
    	<StaticResource ResourceKey="MetroColor7"/>
    	<StaticResource ResourceKey="MetroColor8"/>
    	<StaticResource ResourceKey="MetroColor9"/>
    	<StaticResource ResourceKey="MetroColor10"/>
    	<StaticResource ResourceKey="MetroColor11"/>
    	<StaticResource ResourceKey="MetroColor12"/>
    </AlternationConverter>
	<Style TargetType="{x:Type Label}">
		<Setter Property="Foreground" Value="White"/>
	</Style>
	<Style x:Key="SliderStyleForProgress" TargetType="{x:Type Slider}">
		<Setter Property="Height" Value="5"/>
		<Setter Property="Background" Value="Dodgerblue"/>
		<Setter Property="Foreground" Value="Yellow"/>
		<Setter Property="FocusVisualStyle" Value="{x:Null}"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Slider}">
					<Grid>
						<Rectangle x:Name="Track" Fill="{TemplateBinding Background}"/>
						<Rectangle x:Name="Thumb" Fill="{TemplateBinding Foreground}">
							<Rectangle.RenderTransform>
								<ScaleTransform>
									<ScaleTransform.ScaleX>
										<MultiBinding Converter="{StaticResource converter1}">
											<Binding RelativeSource="{RelativeSource TemplatedParent}" Path="Value"/>
											<Binding RelativeSource="{RelativeSource TemplatedParent}" Path="Minimum"/>
											<Binding RelativeSource="{RelativeSource TemplatedParent}" Path="Maximum"/>
										</MultiBinding>
									</ScaleTransform.ScaleX>
								</ScaleTransform>
							</Rectangle.RenderTransform>
						</Rectangle>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
    <Style x:Key="PauseStyle" TargetType="{x:Type CheckBox}">
		<Setter Property="Foreground" Value="White"/>
		<Setter Property="Background" Value="Transparent"/>
		<Setter Property="FocusVisualStyle" Value="{x:Null}"/>
		<Setter Property="ToolTip" Value="暂停"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type CheckBox}">
					<Viewbox>
						<Canvas Width="30" Height="30" Background="{TemplateBinding Background}">
							<Rectangle x:Name="Rectangle" Width="10" Height="30" Canvas.Left="20" Canvas.Top="0" Stretch="Fill" Fill="{TemplateBinding Foreground}"/>
							<Rectangle x:Name="Rectangle_0" Width="10" Height="30" Canvas.Left="0" Canvas.Top="0" Stretch="Fill" Fill="{TemplateBinding Foreground}"/>
						</Canvas>
					</Viewbox>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Style.Triggers>
			<Trigger Property="IsMouseOver" Value="True">
				<Setter Property="Foreground" Value="#7F000000"/>
			</Trigger>
			<Trigger Property="IsPressed" Value="True">
				<Setter Property="Foreground" Value="White"/>
			</Trigger>
			<Trigger Property="IsChecked" Value="True">
				<Setter Property="ToolTip" Value="播放"/>
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="{x:Type CheckBox}">
							<Viewbox>
								<Canvas Width="26" Height="30" Background="{TemplateBinding Background}">
									<Path x:Name="Path" Width="25.981" Height="30.0003" Canvas.Left="2.87779e-007" Canvas.Top="-6.35788e-007" Stretch="Fill" Fill="{TemplateBinding Foreground}" Data="F1 M 25.981,15.0001L 2.87779e-007,-6.35788e-007L 2.87779e-007,30.0003L 25.981,15.0001 Z "/>
								</Canvas>
							</Viewbox>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Trigger>
		</Style.Triggers>
	</Style>
	<Style x:Key="NextStyle" TargetType="{x:Type Button}">
		<Setter Property="Foreground" Value="White"/>
		<Setter Property="Background" Value="Transparent"/>
		<Setter Property="FocusVisualStyle" Value="{x:Null}"/>
		<Setter Property="ToolTip" Value="下一首"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Button}">
					<Viewbox>
                        <Canvas x:Name="Document" Width="30" Height="20" Clip="F1 M 0,0L 30,0L 30,20L 0,20L 0,0" Background="Transparent">
							<Canvas Width="30" Height="30" Canvas.Left="0" Canvas.Top="0">
								<Path x:Name="Path" Width="30" Height="20" Canvas.Left="-1.98682e-008" Canvas.Top="-9.53674e-007" Stretch="Fill" Data="M 30,-9.53674e-007L 26,-9.53674e-007L 26,8L 13,-9.53674e-007L 13,8L -1.98682e-008,-9.53674e-007L -1.98682e-008,20L 13,12L 13,20L 26,12L 26,20L 30,20L 30,-9.53674e-007 Z " Fill="{TemplateBinding Foreground}"/>
							</Canvas>
						</Canvas>
                    </Viewbox>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Style.Triggers>
			<Trigger Property="IsMouseOver" Value="True">
				<Setter Property="Foreground" Value="#7F000000"/>
			</Trigger>
			<Trigger Property="IsPressed" Value="True">
				<Setter Property="Foreground" Value="White"/>
			</Trigger>
		</Style.Triggers>
	</Style>
	<Style x:Key="LikeStyle" TargetType="{x:Type CheckBox}">
		<Style.Triggers>
			<Trigger Property="IsChecked" Value="True">
				<Setter Property="Foreground" Value="#DFE75849"/>
                <Setter Property="ToolTip" Value="去红心"/>
			</Trigger>
			<Trigger Property="IsMouseOver" Value="True">
				<Setter Property="Foreground" Value="#7F000000"/>
			</Trigger>
			<Trigger Property="IsPressed" Value="True">
				<Setter Property="Foreground" Value="White"/>
			</Trigger>
			<Trigger Property="IsEnabled" Value="False">
				<Setter Property="Foreground" Value="#7F222222"/>
			</Trigger>
		</Style.Triggers>
		<Setter Property="OverridesDefaultStyle" Value="True"/>
		<Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="ToolTip" Value="加红心"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type CheckBox}">
					<Viewbox>
						<Canvas Width="256" Height="220" Clip="F1 M 0,0L 256,0L 256,220L 0,220L 0,0" Background="{TemplateBinding Background}">
							<Path x:Name="path" Width="256" Height="216.961" Canvas.Left="1.67144e-005" Canvas.Top="5.03886" Stretch="Fill" Fill="{TemplateBinding Foreground}" Data="F1 M 128,220C 154.667,200.333 186,172 202,156C 218,140 256,94 256,69C 256,-1.99995 194.288,0.999451 176,5C 144,12 135.016,36.0526 128,44C 120.984,36.0526 112,13 80,6C 61.7118,1.99945 2.61674e-005,-0.999954 5.82235e-006,70C 2.61674e-005,95 38,140 54,156C 70,172 101.333,200.333 128,220" Stroke="{TemplateBinding BorderBrush}" StrokeStartLineCap="Round" StrokeThickness="0"/>
						</Canvas>
					</Viewbox>
					<ControlTemplate.Triggers>
						<Trigger Property="IsChecked" Value="True">
							<Setter Property="StrokeThickness" TargetName="path" Value="20"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="Foreground" Value="White"/>
		<Setter Property="Background" Value="Transparent"/>
		<Setter Property="BorderBrush" Value="White"/>
	</Style>
	<Style x:Key="NeverStyle" TargetType="{x:Type Button}">
		<Style.Triggers>
			<Trigger Property="IsMouseOver" Value="True">
				<Setter Property="Foreground" Value="#7F000000"/>
			</Trigger>
			<Trigger Property="IsPressed" Value="True">
				<Setter Property="Foreground" Value="White"/>
			</Trigger>
			<Trigger Property="IsEnabled" Value="False">
				<Setter Property="Foreground" Value="#7F222222"/>
			</Trigger>
		</Style.Triggers>
		<Setter Property="OverridesDefaultStyle" Value="True"/>
		<Setter Property="FocusVisualStyle" Value="{x:Null}"/>
		<Setter Property="ToolTip" Value="不再播放"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Button}">
					<Viewbox>
						<Canvas Width="256" Height="256" Clip="F1 M 0,0L 256,0L 256,256L 0,256L 0,0" Background="{TemplateBinding Background}">
							<Path Width="185" Height="256" Canvas.Left="35.5" Canvas.Top="4.57764e-005" Stretch="Fill" Fill="{TemplateBinding Foreground}" Data="M 198.667,84L 198.667,236C 198.667,247.046 189.712,256 178.667,256L 77.3332,256C 66.2875,256 57.3332,247.046 57.3332,236L 57.3332,84C 57.3332,82.6301 57.471,81.2925 57.7333,80L 198.267,80C 198.529,81.2925 198.667,82.6301 198.667,84 Z M 91.2256,108.496L 91.2256,227.504L 108.774,227.504L 108.774,108.496L 91.2256,108.496 Z M 147.226,108.496L 147.226,227.504L 164.774,227.504L 164.774,108.496L 147.226,108.496 Z M 85,4.57764e-005L 171,4.57764e-005C 173.761,4.57764e-005 176,2.2386 176,5.00005L 176,32L 220.5,32L 220.5,64L 35.5,64L 35.5,32L 80,32L 80,5.00005C 80,2.2386 82.2386,4.57764e-005 85,4.57764e-005 Z M 101,16.0001C 98.2385,16.0001 95.9999,18.2387 95.9999,21.0001L 95.9999,32L 160,32L 160,21.0001C 160,18.2387 157.761,16.0001 155,16.0001L 101,16.0001 Z "/>
						</Canvas>
					</Viewbox>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="Background" Value="Transparent"/>
		<Setter Property="Foreground" Value="White"/>
	</Style>
	<Style x:Key="ChannelStyle" TargetType="{x:Type ListBoxItem}">
		<!--<Setter Property="FontSize" Value="20"/>-->
		<Setter Property="Foreground" Value="White"/>
		<Setter Property="HorizontalContentAlignment" Value="Center"/>
		<Setter Property="VerticalContentAlignment" Value="Center"/>
		<Setter Property="Background" Value="{Binding (ItemsControl.AlternationIndex), Converter={StaticResource AlternationConverter}, RelativeSource={RelativeSource Self}}"/>
		<Setter Property="FocusVisualStyle" Value="{x:Null}"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ListBoxItem}">
				    <Grid x:Name="grid" Background="{TemplateBinding Background}" RenderTransformOrigin="0.5,0.5">
                        <Grid.RenderTransform>
                            <TransformGroup>
                                <ScaleTransform/>
                                <SkewTransform/>
                                <RotateTransform/>
                                <TranslateTransform/>
                            </TransformGroup>
                        </Grid.RenderTransform>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)">
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)">
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)">
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="1.2"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)">
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="1.2"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="SelectionStates">
                                <VisualState x:Name="Unselected"/>
                                <VisualState x:Name="Selected">
                                	<Storyboard AutoReverse="True" RepeatBehavior="Forever">
                                		<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" Storyboard.TargetName="border1">
                                			<EasingColorKeyFrame KeyTime="0" Value="#7FFFFFFF"/>
                                		</ColorAnimationUsingKeyFrames>
                                	</Storyboard>
                                </VisualState>
                                <VisualState x:Name="SelectedUnfocused">
                                	<Storyboard AutoReverse="True" RepeatBehavior="Forever">
                                		<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" Storyboard.TargetName="border1">
                                			<EasingColorKeyFrame KeyTime="0" Value="#7FFFFFFF"/>
                                		</ColorAnimationUsingKeyFrames>
                                	</Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ValidationStates">
                                <VisualState x:Name="Valid"/>
                                <VisualState x:Name="InvalidFocused"/>
                                <VisualState x:Name="InvalidUnfocused"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
					    <ContentPresenter x:Name="contentPresenter" RenderTransformOrigin="0.5,0.5" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        <Border x:Name="border1" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="Transparent"/>
                    </Grid>
					<ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Panel.ZIndex" Value="1"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="Margin" Value="3"/>
		<Setter Property="BorderThickness" Value="5"/>
	</Style>
	<Style x:Key="ChannelsStyle" TargetType="{x:Type ListBox}">
        <Setter Property="AlternationCount" Value="12"/>
		<Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"/>
		<Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
		<Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
		<Setter Property="ItemContainerStyle" Value="{StaticResource ChannelStyle}"/>
		<Setter Property="FocusVisualStyle" Value="{x:Null}"/>
		<Setter Property="ItemsPanel">
			<Setter.Value>
				<ItemsPanelTemplate>
					<UniformGrid Columns="2"/>
				</ItemsPanelTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ListBox}">
					<ScrollViewer Style="{DynamicResource ChannelsScrollViewer}" Focusable="false" Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}">
						<ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </ScrollViewer>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="Background" Value="Transparent"/>
	</Style>
	
	<!-- ScrollViewer Style-->
    <SolidColorBrush x:Key="NormalColor" Color="#BFFFFFFF"/>
    <SolidColorBrush x:Key="HighlightColor" Color="#FFFFFFFF"/>
	<SolidColorBrush x:Key="PressedColor" Color="#7FFFFFFF"/>
    <SolidColorBrush x:Key="BorderColor">Transparent</SolidColorBrush>
	<SolidColorBrush x:Key="BackColor">Transparent</SolidColorBrush>
	<Style x:Key="stBorder" TargetType="{x:Type Border}">
		<Setter Property="BorderBrush" Value="{StaticResource BorderColor}"/>
		<Setter Property="Background" Value="{StaticResource NormalColor}"/>
		<!--<Setter Property="CornerRadius" Value="5"/>-->
	</Style>
	<Style x:Key="stBackBorder" TargetType="{x:Type Border}">
		<Setter Property="BorderBrush" Value="{StaticResource BorderColor}"/>
		<Setter Property="Background" Value="{StaticResource BackColor}"/>
	</Style>
	<Style x:Key="stRepeatBtn" TargetType="{x:Type RepeatButton}">
		<Setter Property="SnapsToDevicePixels" Value="True"/>
		<Setter Property="OverridesDefaultStyle" Value="true"/>
		<Setter Property="Focusable" Value="false"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type RepeatButton}">
					<Border x:Name="bd" Style="{StaticResource stBorder}">
						<Path HorizontalAlignment="Center" VerticalAlignment="Center" Fill="White" Data="{Binding Content, RelativeSource={RelativeSource TemplatedParent}}" />
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="true">
							<Setter TargetName="bd" Property="Background" Value="{StaticResource HighlightColor}"/>
						</Trigger>
						<Trigger Property="IsPressed" Value="true">
							<Setter TargetName="bd" Property="Background" Value="{StaticResource PressedColor}"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="stScrollBtn" TargetType="{x:Type RepeatButton}">
		<Setter Property="SnapsToDevicePixels" Value="True"/>
		<Setter Property="OverridesDefaultStyle" Value="true"/>
		<Setter Property="IsTabStop" Value="false"/>
		<Setter Property="Focusable" Value="false"/>
		<Setter Property="Background" Value="Transparent"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type RepeatButton}">
					<Border Background="{TemplateBinding Background}" />
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="stThumb" TargetType="{x:Type Thumb}">
		<Setter Property="SnapsToDevicePixels" Value="True"/>
		<Setter Property="OverridesDefaultStyle" Value="true"/>
		<Setter Property="IsTabStop" Value="false"/>
		<Setter Property="Focusable" Value="false"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Thumb}">
					<Border x:Name="bd" Style="{StaticResource stBorder}"/>
					<ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="bd" Property="Background" Value="{StaticResource HighlightColor}"/>
                        </Trigger>
                        <Trigger Property="IsDragging" Value="true">
							<Setter TargetName="bd" Property="Background" Value="{StaticResource PressedColor}"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<ControlTemplate x:Key="VerticalScrollBar" TargetType="{x:Type ScrollBar}">
		<Border Style="{StaticResource stBackBorder}">
			<Grid>
				<Grid.RowDefinitions>
					<RowDefinition/>
                    <RowDefinition Height="Auto" MaxHeight="18"/>
                    <RowDefinition Height="Auto" MaxHeight="18"/>
				</Grid.RowDefinitions>
				<!--<Border Grid.RowSpan="3" CornerRadius="2" />-->
				<!--<RepeatButton Grid.Row="1" Style="{StaticResource stRepeatBtn}" Height="18" Command="ScrollBar.LineUpCommand" Content="M 0 4 L 8 4 L 4 0 Z" />-->
				<Track x:Name="PART_Track" Grid.Row="0" IsDirectionReversed="true">
					<Track.DecreaseRepeatButton>
						<RepeatButton  Style="{StaticResource stScrollBtn}" Command="ScrollBar.PageUpCommand" />
					</Track.DecreaseRepeatButton>
                    <Track.Thumb>
						<Thumb Style="{StaticResource stThumb}" Margin="2,2"/>
					</Track.Thumb>
                    <Track.IncreaseRepeatButton>
						<RepeatButton Style="{StaticResource stScrollBtn}" Command="ScrollBar.PageDownCommand" />
					</Track.IncreaseRepeatButton>
				</Track>
				<!--<RepeatButton Grid.Row="3" Style="{StaticResource stRepeatBtn}" Height="18" Command="ScrollBar.LineDownCommand" Content="M 0 0 L 4 4 L 8 0 Z"/>-->
			</Grid>
		</Border>
	</ControlTemplate>
	<ControlTemplate x:Key="HorizontalScrollBar" TargetType="{x:Type ScrollBar}">
        <Border Style="{StaticResource stBackBorder}">
			<Grid >
				<Grid.ColumnDefinitions>
					<ColumnDefinition/>
					<ColumnDefinition Width="Auto" MaxWidth="18"/>
					<ColumnDefinition Width="Auto" MaxWidth="18"/>
				</Grid.ColumnDefinitions>
				<!--<Border Grid.ColumnSpan="3" CornerRadius="2"  />-->
				<!--<RepeatButton Grid.Column="1" Style="{StaticResource stRepeatBtn}" Width="18" Command="ScrollBar.LineLeftCommand" Content="M 4 0 L 4 8 L 0 4 Z" />-->
				<Track x:Name="PART_Track" Grid.Column="0" IsDirectionReversed="False">
					<Track.DecreaseRepeatButton>
						<RepeatButton Style="{StaticResource stScrollBtn}" Command="ScrollBar.PageLeftCommand" />
					</Track.DecreaseRepeatButton>
					<Track.Thumb>
						<Thumb Style="{StaticResource stThumb}" Margin="0,1" />
					</Track.Thumb>
					<Track.IncreaseRepeatButton>
						<RepeatButton Style="{StaticResource stScrollBtn}" Command="ScrollBar.PageRightCommand" />
					</Track.IncreaseRepeatButton>
				</Track>
				<!--<RepeatButton Grid.Column="2" Style="{StaticResource stRepeatBtn}" Width="18" Command="ScrollBar.LineRightCommand" Content="M 0 0 L 4 4 L 0 8 Z"/>-->
			</Grid>
		</Border>
	</ControlTemplate>
	<Style x:Key="ChannelsScrollViewer" TargetType="{x:Type ScrollViewer}">
		<Setter Property="OverridesDefaultStyle" Value="True"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ScrollViewer}">
					<Grid Background="{TemplateBinding Background}">
						<Grid.ColumnDefinitions>
							<ColumnDefinition/>
                            <ColumnDefinition Width="Auto"/>
						</Grid.ColumnDefinitions>
						<Grid.RowDefinitions>
							<RowDefinition/>
							<RowDefinition Height="Auto"/>
						</Grid.RowDefinitions>
						<Border>
							<ScrollContentPresenter/>
						</Border>
						<ScrollBar  x:Name="PART_VerticalScrollBar" Grid.Column="1" Value="{TemplateBinding VerticalOffset}" Maximum="{TemplateBinding ScrollableHeight}" ViewportSize="{TemplateBinding ViewportHeight}" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Template="{StaticResource VerticalScrollBar}"/>
						<ScrollBar  x:Name="PART_HorizontalScrollBar" Orientation="Horizontal" Grid.Row="1" Value="{TemplateBinding HorizontalOffset}" Maximum="{TemplateBinding ScrollableWidth}" ViewportSize="{TemplateBinding ViewportWidth}" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Template="{StaticResource HorizontalScrollBar}"/>
					</Grid>
					<!--<ControlTemplate.Triggers>
						<EventTrigger RoutedEvent="ScrollViewer.ScrollChanged">
							<BeginStoryboard>
								<Storyboard>
									<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="PART_VerticalScrollBar">
										<EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="1"/>
										<EasingDoubleKeyFrame KeyTime="0:0:1" Value="1"/>
										<EasingDoubleKeyFrame KeyTime="0:0:2" Value="0"/>
									</DoubleAnimationUsingKeyFrames>
									<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="PART_HorizontalScrollBar">
										<EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="1"/>
										<EasingDoubleKeyFrame KeyTime="0:0:1" Value="1"/>
										<EasingDoubleKeyFrame KeyTime="0:0:2" Value="0"/>
									</DoubleAnimationUsingKeyFrames>
								</Storyboard>
							</BeginStoryboard>
						</EventTrigger>
					</ControlTemplate.Triggers>-->
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="ControlPanelTabItemStyle" TargetType="{x:Type TabItem}">
		<Setter Property="FocusVisualStyle" Value="{x:Null}"/>
		<Setter Property="HorizontalContentAlignment" Value="Stretch"/>
		<Setter Property="VerticalContentAlignment" Value="Stretch"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type TabItem}">
					<Grid x:Name="grid" SnapsToDevicePixels="true">
						<Border x:Name="Bd" Background="{TemplateBinding Background}" >
							<ContentPresenter x:Name="Content" ContentSource="Header" HorizontalAlignment="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
						</Border>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsSelected" Value="true">
							<Setter Property="Panel.ZIndex" Value="1"/>
							<Setter Property="Background" Value="#7F000000"/>
						</Trigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition SourceName="grid" Property="IsMouseOver" Value="True"/>
								<Condition Property="IsSelected" Value="False"/>
							</MultiTrigger.Conditions>
							<Setter Property="Background" Value="#7FFFFFFF"/>
						</MultiTrigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="OverridesDefaultStyle" Value="True"/>
	</Style>
	<Style x:Key="ControlPaneStyle" TargetType="{x:Type TabControl}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type TabControl}">
					<Grid Background="{TemplateBinding Foreground}">
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="50"/>
							<ColumnDefinition/>
						</Grid.ColumnDefinitions>
						<Border Background="{TemplateBinding Foreground}" Panel.ZIndex="1">
							<StackPanel x:Name="HeaderPanel" IsItemsHost="True" HorizontalAlignment="Stretch" VerticalAlignment="Center"/>
						</Border>
						<Border x:Name="ContentPanel" Background="{TemplateBinding Background}" Grid.Column="1">
							<ContentPresenter x:Name="SelectedContentHost" ContentSource="SelectedContent"/>
						</Border>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="ItemContainerStyle" Value="{DynamicResource ControlPanelTabItemStyle}"/>
		<Setter Property="OverridesDefaultStyle" Value="True"/>
		<Setter Property="Background" Value="#7F000000"/>
		<Setter Property="Foreground" Value="Transparent"/>
	</Style>
	<Border x:Key="TabItemChannels" Background="Transparent" ToolTip="频道列表">
		<Viewbox>
			<Canvas x:Name="DoubanFM__Channels" Width="256" Height="256" Clip="F1 M 0,0L 256,0L 256,256L 0,256L 0,0">
				<Canvas x:Name="层_1" Width="256" Height="256" Canvas.Left="0" Canvas.Top="0">
					<Rectangle x:Name="Rectangle" Width="32" Height="192" Canvas.Left="112" Canvas.Top="32.0001" Stretch="Fill" Fill="White"/>
					<Rectangle x:Name="Rectangle_0" Width="24" Height="96" Canvas.Left="64" Canvas.Top="80" Stretch="Fill" Fill="White"/>
					<Rectangle x:Name="Rectangle_1" Width="24" Height="96" Canvas.Left="16" Canvas.Top="80" Stretch="Fill" Fill="White"/>
					<Rectangle x:Name="Rectangle_2" Width="24" Height="96" Canvas.Left="216" Canvas.Top="80" Stretch="Fill" Fill="White"/>
					<Rectangle x:Name="Rectangle_3" Width="24" Height="96" Canvas.Left="168" Canvas.Top="80" Stretch="Fill" Fill="White"/>
				</Canvas>
			</Canvas>
		</Viewbox>
	</Border>
	<Border x:Key="TabItemAccount" Background="Transparent" ToolTip="帐号信息">
		<Viewbox>
			<Canvas x:Name="DoubanFM__Account" Width="256" Height="256" Clip="F1 M 0,0L 256,0L 256,256L 0,256L 0,0">
				<Canvas Width="256" Height="256" Canvas.Left="0" Canvas.Top="0">
					<Path x:Name="Path" Width="208" Height="229.333" Canvas.Left="24" Canvas.Top="10.6667" Stretch="Fill" Fill="White" Data="M 24,240L 24,205.907C 41.4222,201.896 58.8444,197.885 71.6778,195.567C 84.5111,193.249 92.7556,192.624 97.8778,189.646C 103,186.667 105,181.333 106,177C 107,172.667 107,169.333 107,166.667C 107,164 107,162 105.5,159.667C 104,157.333 101,154.667 98.3334,152C 95.6667,149.333 93.3334,146.667 91,142.667C 88.6667,138.667 86.3334,133.333 84.3445,126.722C 82.3556,120.111 80.7111,112.222 79.0667,104.334C 78.7556,105.238 78.4445,106.143 77.7667,106.754C 77.0889,107.365 76.0445,107.682 74.6889,107.341C 73.3334,107 71.6667,106 69.5,102.833C 67.3334,99.6667 64.6667,94.3333 62.6667,90.1667C 60.6667,86 59.3334,83 59.3334,79.6667C 59.3334,76.3333 60.6667,72.6667 62.3334,70.6667C 64,68.6667 66,68.3333 68,68C 69.3334,56 70.6667,44 80.6667,32.6667C 90.6667,21.3333 109.333,10.6667 127.833,10.6667C 146.333,10.6667 164.667,21.3333 174.667,32.6667C 184.667,44 186.333,56 188,68C 190,68.3333 192,68.6667 193.667,70.6667C 195.333,72.6667 196.667,76.3333 196.667,79.6667C 196.667,83 195.333,86 193.333,90.1667C 191.333,94.3333 188.667,99.6667 186.5,102.833C 184.333,106 182.667,107 181.311,107.341C 179.956,107.682 178.911,107.365 178.233,106.754C 177.556,106.143 177.245,105.238 176.933,104.334C 175.289,112.223 173.645,120.111 171.656,126.722C 169.667,133.333 167.333,138.667 165,142.667C 162.667,146.667 160.333,149.333 157.667,152C 155,154.667 152,157.333 150.5,159.667C 149,162 149,164 149,166.667C 149,169.333 149,172.667 150,177C 151,181.333 153,186.667 158.122,189.646C 163.245,192.624 171.489,193.249 184.322,195.567C 197.156,197.885 214.578,201.896 232,205.907L 232,240L 24,240 Z "/>
				</Canvas>
			</Canvas>
		</Viewbox>
	</Border>
	<Border x:Key="TabItemSettings" Background="Transparent" ToolTip="设置">
		<Viewbox>
			<Canvas Width="256" Height="256" Clip="F1 M 0,0L 256,0L 256,256L 0,256L 0,0">
				<Path Width="192" Height="192" Canvas.Left="32" Canvas.Top="32" Stretch="Fill" Fill="White" Data="M 128,32C 131.223,32 134.409,32.1589 137.55,32.4691L 148.399,45.1204C 156.893,47.2037 164.887,50.5586 172.168,54.9716L 188.792,53.697C 193.73,57.7421 198.258,62.2699 202.303,67.2083L 201.028,83.8324C 205.441,91.1134 208.796,99.1072 210.88,107.6L 223.531,118.45C 223.841,121.591 224,124.777 224,128C 224,131.223 223.841,134.408 223.531,137.55L 210.88,148.399C 208.796,156.892 205.441,164.886 201.028,172.168L 202.303,188.792C 198.258,193.73 193.73,198.258 188.792,202.303L 172.168,201.028C 164.887,205.441 156.893,208.796 148.399,210.88L 137.55,223.531C 134.408,223.841 131.223,224 128,224C 124.777,224 121.592,223.841 118.451,223.531L 107.601,210.88C 99.1075,208.796 91.1133,205.441 83.8319,201.028L 67.208,202.303C 62.2699,198.258 57.7423,193.73 53.6973,188.792L 54.9719,172.168C 50.5586,164.887 47.2036,156.892 45.1201,148.399L 32.469,137.549C 32.1588,134.408 32,131.223 32,128C 32,124.777 32.1588,121.591 32.4691,118.45L 45.1203,107.601C 47.2037,99.1072 50.5587,91.1132 54.9719,83.8319L 53.6973,67.2081C 57.7424,62.2698 62.2701,57.7421 67.2084,53.697L 83.8324,54.9716C 91.1135,50.5585 99.1075,47.2036 107.601,45.1202L 118.45,32.469C 121.591,32.1588 124.777,32 128,32 Z M 128,64C 92.6538,64 64,92.6538 64,128C 64,163.346 92.6538,192 128,192C 163.346,192 192,163.346 192,128C 192,92.6538 163.346,64 128,64 Z "/>
			</Canvas>
		</Viewbox>
	</Border>
	<Border x:Key="TabItemInfo" Background="Transparent" ToolTip="信息">
		<Viewbox>
			<Canvas Width="256" Height="256" Clip="F1 M 0,0L 256,0L 256,256L 0,256L 0,0">
				<Path Width="192" Height="192" Canvas.Left="32" Canvas.Top="32" Stretch="Fill" Fill="White" Data="F1 M 128,32C 181.493,32 224,74.0339 224,128C 224,181.966 181.493,224 128,224C 74.5073,224 32,181.966 32,128C 32,74.0339 74.5073,32 128,32 Z M 128,52.5715C 116.639,52.5715 107.429,61.7817 107.429,73.1429C 107.429,84.5042 116.639,93.7143 128,93.7143C 139.361,93.7143 148.571,84.5042 148.571,73.1429C 148.571,61.7817 139.361,52.5715 128,52.5715 Z M 107.429,107.429L 107.429,203.429L 148.571,203.429L 148.571,107.429L 107.429,107.429 Z "/>
			</Canvas>
		</Viewbox>
	</Border>
	<Style TargetType="{x:Type Button}">
		<Setter Property="OverridesDefaultStyle" Value="True"/>
		<Setter Property="Background" Value="Transparent"/>
		<Setter Property="BorderBrush" Value="White"/>
		<Setter Property="BorderThickness" Value="2"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Button}">
					<Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}">
						<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="{TemplateBinding Padding}"/>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="Padding" Value="2"/>
		<Setter Property="Foreground" Value="White"/>
		<Setter Property="HorizontalContentAlignment" Value="Center"/>
		<Setter Property="VerticalContentAlignment" Value="Center"/>
		<Style.Triggers>
			<Trigger Property="IsMouseOver" Value="True">
				<Setter Property="Background" Value="#7FFFFFFF"/>
			</Trigger>
			<Trigger Property="IsPressed" Value="True">
				<Setter Property="Foreground" Value="Black"/>
				<Setter Property="Background" Value="White"/>
			</Trigger>
			<Trigger Property="IsEnabled" Value="False">
				<Setter Property="BorderBrush" Value="#7FFFFFFF"/>
				<Setter Property="Foreground" Value="#7FFFFFFF"/>
			</Trigger>
		</Style.Triggers>
	</Style>
	<Style TargetType="{x:Type CheckBox}">
		<Setter Property="Foreground" Value="White"/>
		<Setter Property="BorderThickness" Value="1"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type CheckBox}">
					<BulletDecorator Background="Transparent" SnapsToDevicePixels="true">
						<BulletDecorator.Bullet>
							<Border x:Name="toggleButton" Background="#BFFFFFFF" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Height="14" Width="14" Padding="1">
								<Viewbox x:Name="viewbox">
									<Canvas Width="256" Height="256" Clip="F1 M 0,0L 256,0L 256,256L 0,256L 0,0">
										<Path x:Name="tick" Width="256" Height="256" Canvas.Left="-3.77495e-007" Canvas.Top="-6.10352e-005" Stretch="Fill" Fill="#FF000000" Data="F1 M -3.77495e-007,160C 23.8367,186.523 80,256 80,256L 256,23.2727L 215.5,-6.10352e-005L 80,209.455L 32,128"/>
									</Canvas>
								</Viewbox>
							</Border>
						</BulletDecorator.Bullet>
						<ContentPresenter x:Name="presenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" TextBlock.Foreground="White"/>
					</BulletDecorator>
					<ControlTemplate.Triggers>
						<Trigger Property="HasContent" Value="True">
							<Setter Property="FocusVisualStyle">
								<Setter.Value>
									<Style>
										<Setter Property="Control.Template">
											<Setter.Value>
												<ControlTemplate>
													<Rectangle Margin="14,0,0,0" SnapsToDevicePixels="True" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
												</ControlTemplate>
											</Setter.Value>
										</Setter>
									</Style>
								</Setter.Value>
							</Setter>
							<Setter Property="Padding" Value="4,0,0,0"/>
						</Trigger>
						<Trigger Property="IsChecked" Value="False">
							<Setter Property="Visibility" TargetName="tick" Value="Hidden"/>
						</Trigger>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter Property="Control.Background" TargetName="toggleButton" Value="White"/>
						</Trigger>
						<Trigger Property="IsPressed" Value="True">
							<Setter Property="Background" TargetName="toggleButton" Value="#7F000000"/>
							<Setter Property="Fill" TargetName="tick" Value="White"/>
						</Trigger>
						<Trigger Property="IsEnabled" Value="False">
							<Setter Property="TextBlock.Foreground" TargetName="presenter" Value="#7FFFFFFF"/>
							<Setter Property="Background" TargetName="toggleButton" Value="#3FFFFFFF"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="OverridesDefaultStyle" Value="True"/>
		<Setter Property="Padding" Value="2"/>
	</Style>
	<Style TargetType="{x:Type TextBox}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type TextBoxBase}">
					<Border x:Name="Bd" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
						<ScrollViewer x:Name="PART_ContentHost" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Margin="{TemplateBinding Padding}"/>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter Property="Background" TargetName="Bd" Value="White"/>
						</Trigger>
						<Trigger Property="IsFocused" Value="True">
							<Setter Property="Background" TargetName="Bd" Value="White"/>
						</Trigger>
						<Trigger Property="IsEnabled" Value="False">
							<Setter Property="Background" TargetName="Bd" Value="#7FFFFFFF"/>
							<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="BorderThickness" Value="0"/>
		<Setter Property="Background" Value="#BFFFFFFF"/>
	</Style>
	<Style TargetType="{x:Type PasswordBox}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type PasswordBox}">
					<Border x:Name="Bd" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
						<ScrollViewer x:Name="PART_ContentHost" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Margin="{TemplateBinding Padding}"/>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter Property="Background" TargetName="Bd" Value="White"/>
						</Trigger>
						<Trigger Property="IsFocused" Value="True">
							<Setter Property="Background" TargetName="Bd" Value="White"/>
						</Trigger>
						<Trigger Property="IsEnabled" Value="False">
							<Setter Property="Background" TargetName="Bd" Value="#7FFFFFFF"/>
							<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="Background" Value="#BFFFFFFF"/>
		<Setter Property="BorderThickness" Value="0"/>
	</Style>
	<Style TargetType="{x:Type GroupBox}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type GroupBox}">
					<Grid SnapsToDevicePixels="True">
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="6"/>
							<ColumnDefinition Width="Auto"/>
							<ColumnDefinition Width="*"/>
							<ColumnDefinition Width="6"/>
						</Grid.ColumnDefinitions>
						<Grid.RowDefinitions>
							<RowDefinition Height="Auto"/>
							<RowDefinition Height="Auto"/>
							<RowDefinition Height="*"/>
							<RowDefinition Height="6"/>
						</Grid.RowDefinitions>
						<Border BorderBrush="Transparent" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.ColumnSpan="4" Grid.Column="0" Grid.Row="1" Grid.RowSpan="3"/>
						<Border x:Name="Header" Grid.Column="1" Padding="3,1,3,0" Grid.Row="0" Grid.RowSpan="2">
							<ContentPresenter ContentTemplate="{TemplateBinding HeaderTemplate}" Content="{TemplateBinding Header}" ContentStringFormat="{TemplateBinding HeaderStringFormat}" ContentSource="Header" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
						</Border>
						<ContentPresenter Grid.ColumnSpan="2" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Grid.Column="1" ContentStringFormat="{TemplateBinding ContentStringFormat}" Margin="{TemplateBinding Padding}" Grid.Row="2" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
						<Border BorderBrush="White" BorderThickness="{TemplateBinding BorderThickness}" Grid.ColumnSpan="4" Grid.Row="1" Grid.RowSpan="3">
							<Border.OpacityMask>
								<MultiBinding ConverterParameter="7" UpdateSourceTrigger="Default">
									<MultiBinding.Converter>
										<BorderGapMaskConverter/>
									</MultiBinding.Converter>
									<Binding ElementName="Header" Path="ActualWidth"/>
									<Binding Path="ActualWidth" RelativeSource="{RelativeSource Self}"/>
									<Binding Path="ActualHeight" RelativeSource="{RelativeSource Self}"/>
								</MultiBinding>
							</Border.OpacityMask>
						</Border>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="BorderThickness" Value="3"/>
	</Style>
	<Style TargetType="Slider">
		<Setter Property="Template" Value="{DynamicResource SliderControlTemplate1}"/>
	</Style>
	<ControlTemplate x:Key="SliderControlTemplate1" TargetType="{x:Type Slider}">
		<Grid>
			<Border Grid.Row="1" x:Name="TrackBackground" Background="{TemplateBinding Background}">
					<Rectangle x:Name="PART_SelectionRange" Visibility="Hidden"/>
			</Border>
			<Track x:Name="PART_Track">
				<Track.DecreaseRepeatButton>
					<RepeatButton Command="Slider.DecreaseLarge" Height="10" Style="{DynamicResource stScrollBtn}" Background="#7FFFFFFF"/>
				</Track.DecreaseRepeatButton>
				<Track.IncreaseRepeatButton>
					<RepeatButton Command="Slider.IncreaseLarge" Height="10" Style="{DynamicResource stScrollBtn}" Background="#7F000000"/>
				</Track.IncreaseRepeatButton>
				<Track.Thumb>
					<Thumb x:Name="Thumb" Width="15" Height="30" Style="{DynamicResource stThumb}"/>
				</Track.Thumb>
			</Track>
		</Grid>
		<ControlTemplate.Triggers>
			<Trigger Property="IsSelectionRangeEnabled" Value="True">
				<Setter Property="Visibility" TargetName="PART_SelectionRange" Value="Visible"/>
			</Trigger>
			<Trigger Property="IsKeyboardFocused" Value="True">
				<Setter Property="Foreground" TargetName="Thumb" Value="Blue"/>
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>
	<Style TargetType="{x:Type RadioButton}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type RadioButton}">
					<BulletDecorator Background="Transparent">
						<BulletDecorator.Bullet>
							<Grid>
								<Ellipse x:Name="Outer" Width="14" Height="14" Fill="#BFFFFFFF"/>
								<Ellipse x:Name="Inner" Width="6" Height="6" Fill="Black"/>
							</Grid>
						</BulletDecorator.Bullet>
						<ContentPresenter x:Name="presenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" TextBlock.Foreground="White"/>
					</BulletDecorator>
					<ControlTemplate.Triggers>
						<Trigger Property="IsChecked" Value="False">
							<Setter Property="Visibility" TargetName="Inner" Value="Hidden"/>
						</Trigger>
						<Trigger Property="HasContent" Value="True">
							<Setter Property="FocusVisualStyle">
								<Setter.Value>
									<Style>
										<Setter Property="Control.Template">
											<Setter.Value>
												<ControlTemplate>
													<Rectangle Margin="14,0,0,0" SnapsToDevicePixels="True" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
												</ControlTemplate>
											</Setter.Value>
										</Setter>
									</Style>
								</Setter.Value>
							</Setter>
							<Setter Property="Padding" Value="4,0,0,0"/>
						</Trigger>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter Property="Fill" TargetName="Outer" Value="White"/>
						</Trigger>
						<Trigger Property="IsPressed" Value="True">
							<Setter Property="Fill" TargetName="Outer" Value="#7F000000"/>
							<Setter Property="Fill" TargetName="Inner" Value="White"/>
						</Trigger>
						<Trigger Property="IsEnabled" Value="False">
							<Setter Property="TextBlock.Foreground" TargetName="presenter" Value="#7FFFFFFF"/>
							<Setter Property="Fill" TargetName="Outer" Value="#7FFFFFFF"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	
	<Style x:Key="MinimizeStyle" TargetType="{x:Type Button}">
		<Setter Property="Foreground" Value="White"/>
		<Setter Property="Background" Value="Transparent"/>
		<Setter Property="FocusVisualStyle" Value="{x:Null}"/>
		<Setter Property="ToolTip" Value="最小化"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Button}">
					<Viewbox>
						<Canvas Width="256" Height="256" Clip="F1 M 0,0L 256,0L 256,256L 0,256L 0,0" Background="{TemplateBinding Background}">
	<Rectangle Width="192" Height="32" Canvas.Left="32" Canvas.Top="192" Stretch="Fill" Fill="{TemplateBinding Foreground}"/>
</Canvas>
					</Viewbox>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Style.Triggers>
			<Trigger Property="IsMouseOver" Value="True">
				<Setter Property="Foreground" Value="#7F000000"/>
			</Trigger>
			<Trigger Property="IsPressed" Value="True">
				<Setter Property="Foreground" Value="White"/>
			</Trigger>
		</Style.Triggers>
	</Style>
	<Style x:Key="ToNotifyIconStyle" TargetType="{x:Type Button}">
		<Setter Property="Foreground" Value="White"/>
		<Setter Property="Background" Value="Transparent"/>
		<Setter Property="FocusVisualStyle" Value="{x:Null}"/>
		<Setter Property="ToolTip" Value="最小化到托盘"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Button}">
					<Viewbox>
						<Canvas Width="256" Height="256" Clip="F1 M 0,0L 256,0L 256,256L 0,256L 0,0" Background="{TemplateBinding Background}">
	<Path Width="224" Height="224" Canvas.Left="16" Canvas.Top="16" Stretch="Fill" StrokeThickness="32" StrokeLineJoin="Round" Stroke="{TemplateBinding Foreground}" Data="M 32,32L 224,224"/>
	<Path Width="127.5" Height="128.25" Canvas.Left="112.5" Canvas.Top="112" Stretch="Fill" StrokeThickness="32" StrokeLineJoin="Round" Stroke="{TemplateBinding Foreground}" Data="M 128.5,224.25L 224,224L 224,128"/>
</Canvas>
					</Viewbox>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Style.Triggers>
			<Trigger Property="IsMouseOver" Value="True">
				<Setter Property="Foreground" Value="#7F000000"/>
			</Trigger>
			<Trigger Property="IsPressed" Value="True">
				<Setter Property="Foreground" Value="White"/>
			</Trigger>
		</Style.Triggers>
	</Style>
	<Style x:Key="ExitStyle" TargetType="{x:Type Button}">
		<Setter Property="Foreground" Value="White"/>
		<Setter Property="Background" Value="Transparent"/>
		<Setter Property="FocusVisualStyle" Value="{x:Null}"/>
		<Setter Property="ToolTip" Value="退出"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Button}">
					<Viewbox>
						<Canvas Width="256" Height="256" Clip="F1 M 0,0L 256,0L 256,256L 0,256L 0,0" Background="{TemplateBinding Background}">
	<Path Width="224" Height="224" Canvas.Left="16" Canvas.Top="16" Stretch="Fill" StrokeThickness="32" StrokeLineJoin="Round" Stroke="{TemplateBinding Foreground}" Data="M 32,32L 224,224"/>
	<Path Width="224" Height="224" Canvas.Left="16" Canvas.Top="16" Stretch="Fill" StrokeThickness="32" StrokeLineJoin="Round" Stroke="{TemplateBinding Foreground}" Data="M 224,32L 32,224"/>
</Canvas>
					</Viewbox>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Style.Triggers>
			<Trigger Property="IsMouseOver" Value="True">
				<Setter Property="Foreground" Value="#7F000000"/>
			</Trigger>
			<Trigger Property="IsPressed" Value="True">
				<Setter Property="Foreground" Value="White"/>
			</Trigger>
		</Style.Triggers>
	</Style>
</ResourceDictionary>